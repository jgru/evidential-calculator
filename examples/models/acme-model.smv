MODULE main
    VAR
        action: {add_job_a, add_job_b, take_job, nop};
        dir_entry_1: {Empty, JobA, JobB, DelA, DelB};
        dir_entry_2: {Empty, JobA, JobB, DelA, DelB};
    INIT
        action = nop
    INIT
        dir_entry_1 = Empty
    INIT
        dir_entry_2 = Empty
    DEFINE
        is_dir_entry_1_usable := (dir_entry_1 = Empty | dir_entry_1 = DelA | dir_entry_1 = DelB);
        is_dir_entry_2_usable := (dir_entry_2 = Empty | dir_entry_2 = DelA | dir_entry_2 = DelB);
        is_job_a   := (dir_entry_1 = JobA) | (dir_entry_2 = JobA);
        is_job_b   := (dir_entry_1 = JobB) | (dir_entry_2 = JobB);
    ASSIGN
        next(dir_entry_1) :=
           case
               next(action) = add_job_a:
                 case
                   is_dir_entry_1_usable : JobA;
                   TRUE: dir_entry_1;
                 esac;
               next(action) = add_job_b:
                 case
                   is_dir_entry_1_usable : JobB;
                   TRUE: dir_entry_1;
                 esac;
               next(action) = take_job:
                 case
                   !is_dir_entry_1_usable :
                     case
                       dir_entry_1 = JobA : DelA;
                       dir_entry_1 = JobB : DelB;
                     esac;
                   TRUE: dir_entry_1;
                 esac;
              TRUE: dir_entry_1;
          esac;
        next(dir_entry_2) :=
           case
               next(action) = add_job_a:
                 case
                   !is_dir_entry_1_usable & is_dir_entry_2_usable : JobA;
                   TRUE: dir_entry_2;
                 esac;
               next(action) = add_job_b:
                 case
                   !is_dir_entry_1_usable & is_dir_entry_2_usable : JobB;
                   TRUE: dir_entry_2;
                 esac;
               next(action) = take_job:
                 case
                  is_dir_entry_1_usable & !is_dir_entry_2_usable :
                     case
                       dir_entry_2 = JobA : DelA;
                       dir_entry_2 = JobB : DelB;
                     esac;
                   TRUE: dir_entry_2;
                 esac;
               TRUE: dir_entry_2;
          esac;

    TRANS
        next(action) = add_job_a -> !is_job_a
    TRANS
        next(action) = add_job_b -> !is_job_b
    TRANS
        next(action) = take_job -> !is_dir_entry_1_usable | !is_dir_entry_2_usable
    TRANS
        next(action) = nop -> TRUE