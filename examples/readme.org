#+title: Literate Examples
#+language: en
#+options: toc:nil

This directory contains the literate examples accompanying our paper titled

/"Formally Characterizing (and Proving) Necessary and Sufficient Evidence in
Forensic Event Reconstruction"/

* Directory Contents
Within this directory, you find the following =org-mode=-notebooks:

#+begin_src shell :results output verbatim
tree
#+end_src

#+RESULTS:
#+begin_example
.
├── acme.org
├── lst-1.org
├── lst-2.org
├── lst-3.org
├── lst-4.org
└── readme.org

1 directory, 6 files
#+end_example

Each notebook's name references a listing in the paper.

* Preparations to Run the Literate Examples
Although the literate notebooks are already quite comprehensive, you
might want to execute the src-blocks yourself and play with the
examples yourself.

** Using Docker
To enable you to just run the code and get results, we provide a
[[./Dockerfile][Dockerfile]]. The container houses Emacs' terminal version (=emacs-nox=
in version 28.1) with all needed packages and all other necessary
dependencies (especially, Python 3.9.8). Note that it extends the
Dockerfile in the parent directory which has to be built first.

To build it run the following commands:

#+begin_src shell
# Build "base layers" containing the evidential-calculator
cd .. && docker build . -t evic
# Build the dockerized Emacs for the literate exampels
cd examples && docker build . -t evic-emacs
#+end_src

Afterward, you can start the container simply by running
#+begin_src shell
docker run -it evic-emacs
#+end_src

Note that if you want to make persistent changes, consider to bind-mount a
directory:
#+begin_src shell
docker run -it -v $(pwd)/..:/data/evidential-calculator evic-ema
#+end_src

After having started the container, you can simply open the notebooks located in
=/usr/local/src/evidential-calculator/examples= and execute each source block
one after another.

** Manual Setup
If you refrain from using Docker, please consider the following
instructions to run the literate examples.

*** Dependencies
If you want to run the code without a container, please ensure that you have the
following dependencies installed:

- Python 3.9.8
  - with the libraries listed in [[../requirements.txt][../requirements.txt]]
- Emacs with the packages (see [[./init.el]] for reference)
  - =org-babel= (already include in =org=)
  - =pyvenv-mode=

*** Running the Examples
First, find the base directory of this file:
#+name: basepath
#+begin_src elisp
(let ((basepath
        (file-name-as-directory
          (concat (file-name-as-directory
                    default-directory) ".."))))
  (expand-file-name basepath))
#+end_src

#+RESULTS: basepath
: /tmp/evidential-calculator/


Second, create Python virtual environment called =venv= by running the
following commands:
#+begin_src shell :results output verbatim :var BP=basepath
cd $BP
python3.9 -m venv venv
source venv/bin/activate
pip3 install -r requirements.txt
#
# Possibly, install the evidence_set_calculation-package
# cd $BP && pip3 install .
#+end_src

#+RESULTS:
: Processing ./deps/pynusmv
: Collecting pyparsing
:   Using cached pyparsing-3.0.9-py3-none-any.whl (98 kB)
: Using legacy 'setup.py install' for pynusmv, since package 'wheel' is not installed.
: Installing collected packages: pyparsing, pynusmv
:     Running setup.py install for pynusmv: started
:     Running setup.py install for pynusmv: finished with status 'done'
: Successfully installed pynusmv-1.0rc8 pyparsing-3.0.9

Third, activate the virtual environment =venv=, so that Python
interpreter is taken up from this virtual environment.

Please not, that this requires the Emacs package [[https://github.com/jorgenschaefer/pyvenv][pyvenv.el]]:
#+begin_src elisp :results silent :var path=basepath
(pyvenv-activate (concat path "/venv"))
#+end_src
